1) Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск). Атрибут
   реализовать как приватный. В рамках метода реализовать переключение светофора в режимы: красный, желтый, зеленый.
   Время перехода между режимами должно составлять 7 и 2 секунды. Проверить работу примера, создав экземпляр и вызвав
   описанный метод.
2) Реализовать класс Road (дорога), в котором определить атрибуты: length (длина), width (ширина). Значения данных
   атрибутов должны передаваться при создании экземпляра класса. Атрибуты сделать защищенными. Определить метод расчета
   массы асфальта, необходимого для покрытия всего дорожного полотна. Использовать формулу: длина*ширина*масса асфальта
   для покрытия одного кв метра дороги асфальтом, толщиной в 1 см*число см толщины полотна. Проверить работу метода.
   Например: 20м*5000м*25кг*5см = 12500 т
3) Реализовать базовый класс Worker (работник), в котором определить атрибуты: name, surname, position (должность),
   income (доход). Последний атрибут должен быть защищенным и ссылаться на словарь, содержащий элементы: оклад и премия,
   например, {"profit": profit, "bonus": bonus}. Создать класс Position (должность) на базе класса Worker. В классе
   Position реализовать методы получения полного имени сотрудника (get_full_name) и дохода с учетом премии
   (get_full_profit). Проверить работу примера на реальных данных (создать экземпляры класса Position, передать данные,
   проверить значения атрибутов, вызвать методы экземпляров).
4) Опишите несколько классов: TownCar, SportCar, WorkCar, PoliceCar. У каждого класса должны быть следующие атрибуты:
   speed, color, name, is_police (булево). А также несколько методов: go, stop, turn(direction), которые должны
   сообщать, что машина поехала, остановилась, повернула (куда).
5) Реализовать класс Stationery (канцелярская принадлежность). Определить в нем атрибут title (название) и метод draw
   (отрисовка). Метод выводит сообщение “Запуск отрисовки.” Создать три дочерних класса Pen (ручка), Pencil (карандаш),
   Handle (маркер). В каждом из классов реализовать переопределение метода draw. Для каждого из классов методы должен
   выводить уникальное сообщение. Создать экземпляры классов и проверить, что выведет описанный метод для каждого
   экземпляра.